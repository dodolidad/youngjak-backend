<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="youngjak">  

  <insert id="insertUser">
    INSERT INTO USERS
      (
      USER_ID,
      USER_PWD,
      CHG_PWD_QST,
      CHG_PWD_ANS,
      CREATE_DATE
      )
    VALUES
    (
      #{userId},
      HEX(AES_ENCRyPT(#{userPwd}, 'youngjak')),
      #{chgPwdQst},
      #{chgPwdAns},
      NOW()
    )
  </insert>

  <select id="selectUserIdCnt">
    SELECT	COUNT(*) AS USER_ID_CNT
    FROM		USERS
    WHERE		USER_ID = #{userId}
  </select>

  <select id="selectUserPwdCnt">
    SELECT	COUNT(*) AS USER_PWD_CNT
    FROM		USERS
    WHERE		USER_ID = #{userId}
    AND     USER_PWD = HEX(AES_ENCRyPT(#{userPwd}, 'youngjak'))
  </select>

  <select id="selectUser">
    SELECT	USER_ID, 
            USER_AUTH,
            CHG_PWD_QST,
            CHG_PWD_ANS,
            CREATE_DATE
    FROM		USERS
    WHERE		USER_ID = #{userId}
    AND     USER_PWD = HEX(AES_ENCRyPT(#{userPwd}, 'youngjak'))
  </select>

  <insert id="insertText">
    INSERT INTO TEXTS
      (
      TEXT_ID,
      IDX,
      TEXT1,
      TEXT_LANG,
      CREATE_USER_ID,
      CREATE_DATETIME
      )
    VALUES
      (
      #{textId},
      #{idx},
      #{text1},
      #{textLang},
      #{userId},
      NOW()
      )
  </insert>

  <select id="selectText">
    SELECT	TEXT_ID, 
            IDX,
            TEXT1,
            TEXT_LANG,
            CREATE_USER_ID,
            CREATE_DATETIME
    WHERE   TEXT_ID = #{textId}
  </select>

  <insert id="inserUserText">
    INSERT INTO USER_TEXT
      (
      USER_ID,
      TEXT_ID,
      USE_YN
      )
    VALUES
      (
      #{userId},
      #{textId},
      #{useYn}
      )
  </insert>

  <select id="selectUserText">
    SELECT	USER_ID, 
            TEXT_ID,
            USE_YN
    FROM    USER_TEXT
    WHERE		1=1
    AND     USER_ID = #{userId}
    AND     TEXT_ID = #{textId}
  </select>

  <select id="selectTextOneRandomForGuest">
    SELECT	TEXT_ID, IDX, TEXT1, TEXT_LANG, CREATE_USER_ID, CREATE_DATETIME, SRC, CNT, TOT_TEXT,
            CASE
              WHEN LEAD(TEXT_LANG)OVER() IS NULL
                THEN 1500
              WHEN TEXT_LANG = LEAD(TEXT_LANG)OVER()
                THEN 1000
                ELSE LENGTH(TOT_TEXT) * 50
            END AS
          INTERV
    FROM		(
          SELECT	TEXT_ID, IDX, TEXT1, TEXT_LANG, CREATE_USER_ID, CREATE_DATETIME,
                CONCAT(TEXT_ID, IDX, TEXT_LANG, '.mp3') AS SRC,
                COUNT(*)OVER() AS CNT,
                JSON_ARRAYAGG(TEXT1)OVER(PARTITION BY TEXT_ID) AS TOT_TEXT
          FROM		TEXTS T1
          WHERE		EXISTS (
                          SELECT TEXT_ID 
                          FROM (
                                SELECT TEXT_ID 
                                FROM texts 
                                <if test="textIdNot != null and textIdNot !=''">
                                WHERE TEXT_ID not in (#{textIdNot})
                                </if>
                                GROUP BY TEXT_ID 
                                ORDER BY RAND() 
                                LIMIT 1
                                ) T2 WHERE T1.TEXT_ID = T2.TEXT_ID)
          ) A
    ORDER BY
          TEXT_ID, IDX
  </select>

</mapper>